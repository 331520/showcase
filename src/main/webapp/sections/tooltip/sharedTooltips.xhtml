<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:p="http://primefaces.org/ui"
      xmlns:pe="http://primefaces.org/ui/extensions">
<ui:composition template="/templates/showcaseLayout.xhtml">
    <ui:define name="centerContent">
        <f:facet name="header">
            <h:outputText value="Tooltip"/>
        </f:facet>
        <h:panelGroup layout="block" styleClass="centerContent">
            In shared mode a single tooltip is shared between multiple targets. Tooltip's content is shared and reduces markup.
            A typically example is one and the same tooltip text for each filter field in a datatable with filtering feature.
        </h:panelGroup>

        <h:panelGroup layout="block" styleClass="centerExample">
            <p:dataTable id="sharedTooltipTable" var="message" value="#{dataTableController.messages}">
                <f:facet name="header">
                    Please move mouse over filter input fields
                </f:facet>
                <pe:paginator rows="5" paginatorPosition="bottom"/>
                <p:column filterBy="#{message.subject}">
                    <f:facet name="header">
                        <h:outputText value="Subject"/>
                    </f:facet>
                    <h:outputText value="#{message.subject}"/>
                </p:column>
                <p:column filterBy="#{message.text}">
                    <f:facet name="header">
                        <h:outputText value="Text"/>
                    </f:facet>
                    <h:outputText value="#{message.text}"/>
                </p:column>
                <p:column filterBy="#{message.time}">
                    <f:facet name="header">
                        <h:outputText value="Time"/>
                    </f:facet>
                    <h:outputText value="#{message.time}"/>
                </p:column>
            </p:dataTable>

            <pe:tooltip value="Type any value to filter datatable" forSelector="#sharedTooltipTable th .ui-column-filter"
                        shared="true" targetPosition="top center" position="bottom center"/>
        </h:panelGroup>

        <ui:decorate template="/templates/twoTabsDecorator.html">
            <ui:define name="contentTab1">
&lt;p:dataTable id=&quot;sharedTooltipTable&quot; var=&quot;message&quot; value=&quot;\#{dataTableController.messages}&quot;&gt;
    &lt;f:facet name=&quot;header&quot;&gt;
        Please move mouse over filter input fields
    &lt;/f:facet&gt;    
    &lt;pe:paginator rows=&quot;5&quot; paginatorPosition=&quot;bottom&quot;/&gt;
    &lt;p:column filterBy=&quot;\#{message.subject}&quot;&gt;
        &lt;f:facet name=&quot;header&quot;&gt;
            &lt;h:outputText value=&quot;Subject&quot;/&gt;
        &lt;/f:facet&gt;
        &lt;h:outputText value=&quot;\#{message.subject}&quot;/&gt;
    &lt;/p:column&gt;
    &lt;p:column filterBy=&quot;\#{message.text}&quot;&gt;
        &lt;f:facet name=&quot;header&quot;&gt;
            &lt;h:outputText value=&quot;Text&quot;/&gt;
        &lt;/f:facet&gt;
        &lt;h:outputText value=&quot;\#{message.text}&quot;/&gt;
    &lt;/p:column&gt;
    &lt;p:column filterBy=&quot;\#{message.time}&quot;&gt;
        &lt;f:facet name=&quot;header&quot;&gt;
            &lt;h:outputText value=&quot;Time&quot;/&gt;
        &lt;/f:facet&gt;
        &lt;h:outputText value=&quot;\#{message.time}&quot;/&gt;
    &lt;/p:column&gt;
&lt;/p:dataTable&gt;

&lt;pe:tooltip value=&quot;Type any value to filter datatable&quot; forSelector=&quot;#sharedTooltipTable th .ui-column-filter&quot;
        shared=&quot;true&quot; targetPosition=&quot;top center&quot; position=&quot;bottom center&quot;/&gt;
            </ui:define>
            <ui:define name="contentTab2">
@ManagedBean
@ViewScoped
public class DataTableController implements Serializable {

	private List&lt;Message&gt; messages;

	public DataTableController() {
		if (messages == null) {
			messages = new ArrayList&lt;Message&gt;();

			for (int i = 0; i &lt; 100; i++) {
				Message message = new Message();
				message.setSubject(&quot;subject &quot; + i);
				message.setText(&quot;text &quot; + i);
				messages.add(message);
			}
		}
	}

	public final List&lt;Message&gt; getMessages() {
		return messages;
	}

	public final void setMessages(final List&lt;Message&gt; messages) {
		this.messages = messages;
	}

	public class Message implements Serializable {

		private String subject;
		private String text;
		private long time;

		public Message() {
			time = System.currentTimeMillis() + (long) (Math.random() * 10);
		}

		public final String getSubject() {
			return subject;
		}

		public final void setSubject(String subject) {
			this.subject = subject;
		}

		public final String getText() {
			return text;
		}

		public final void setText(String text) {
			this.text = text;
		}

		public long getTime() {
			return time;
		}

		public void setTime(long time) {
			this.time = time;
		}
	}
}
            </ui:define>
        </ui:decorate>
    </ui:define>
    <ui:define name="useCases">
        <ui:include src="/sections/tooltip/useCasesChoice.xhtml"/>
    </ui:define>
    <ui:define name="docuTable">
        <ui:include src="/sections/shared/documentation.xhtml">
            <ui:param name="tagName" value="tooltip"/>
        </ui:include>
    </ui:define>
</ui:composition>
</html>
