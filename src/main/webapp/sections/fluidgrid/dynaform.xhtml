<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:p="http://primefaces.org/ui"
      xmlns:pe="http://primefaces.org/ui/extensions"
      xmlns:showcase="http://primefaces.org/ui/extensions/showcase">
<ui:composition template="/templates/showcaseLayout.xhtml">
    <ui:param name="resizeFunction" value="resizeLayout()"/>
    
    <ui:define name="centerContent">
        <f:facet name="header">
            <h:outputText value="FluidGrid"/>
        </f:facet>
        <h:panelGroup layout="block" styleClass="centerContent">
            FluidGrid allows to set up a nice tight grid with items that have variable heights and widths.
            FluidGrid is a responsive grid. That means, the grid will reflow as the window size changes.
            Items can have any content: text, images, links, input fields, etc.
            They can be defined in a static or in a dynamic way as in data iteration components.
            <p/>
            This example demonstrates 
        </h:panelGroup>
        
        <h:panelGroup layout="block" styleClass="centerExample">
<!-- EXAMPLE-SOURCE-START -->
<pe:fluidGrid resizeBound="false" widgetVar="fluidGridWdgt">

</pe:fluidGrid>

<h:outputScript id="fluidGridScript" target="body">
/* <![CDATA[ */    
    function resizeLayout() {
        PF('fluidGridWdgt').layout();
    }
/* ]]> */
</h:outputScript>
<!-- EXAMPLE-SOURCE-END -->
        </h:panelGroup>
        
        <ui:decorate template="/templates/oneTabDecorator.xhtml">
            <ui:define name="contentTab1">
${showcase:getFileContent('/sections/fluidgrid/dynaform.xhtml')}
            </ui:define>
        </ui:decorate>
    </ui:define>
    <ui:define name="useCases">
        <ui:include src="/sections/fluidgrid/useCasesChoice.xhtml"/>
    </ui:define>
    <ui:define name="docuTable">
        <ui:include src="/sections/shared/twoTabsDocumentation.xhtml">
            <ui:param name="tagName1" value="fluidGrid"/>
            <ui:param name="tagName2" value="fluidGridItem"/>
        </ui:include>
    </ui:define>
</ui:composition>
</html>