<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:ui="http://java.sun.com/jsf/facelets">
<ui:composition template="/templates/showcaseLayout.xhtml">
    <ui:define name="centerContent">
        <f:facet name="header">
            <h:outputText value="AjaxErrorHandler"/>
        </f:facet>
        <h:panelGroup layout="block" styleClass="centerContent">
            If a partial AJAX request returned some error, PrimeFaces based web application did not respond to this error and user didn't know,
            where is the problem and how he/she can continue to work. The most often problem with AJAX errors is, when some action / actionListener
            throws an unexpected exception and developer don't catch all exceptions (e.g. falied DB save operation or expired Session-, ViewScope).
            <p/>
            Maybe you have also experienced that during development - user's actions has no affectÂ after session expiration
            (no response from server). Because PrimeFaces ignores a lot of errors, finding out the real reason of problem takes a long time without any error information.
            <p/>
            Component pe:ajaxErrorHandler is created to overcome these cases and provide a better AJAX error handling.
            The component enables message displaying in case of detection of an AJAX error. In case of need, you can define different behaviours for various types of errors.
            <p/>
            The best way to understand the behaviour is through examples.
        </h:panelGroup>
    </ui:define>
    <ui:define name="useCases">
        <ui:include src="/sections/ajaxerrorhandler/useCasesChoice.xhtml"/>
    </ui:define>
    <ui:define name="docuTable">
        <ui:include src="/sections/shared/documentation.xhtml">
            <ui:param name="tagName" value="ajaxErrorHandler"/>
        </ui:include>
    </ui:define>
</ui:composition>
</html>
